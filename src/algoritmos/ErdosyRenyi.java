/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoritmos;


import javax.swing.*;


/**
 *
 * @author YaGaRa
 */
public class ErdosyRenyi extends javax.swing.JDialog {

    /**
     * Creates new form ErdosyRenyi
     */
    public ErdosyRenyi(javax.swing.JDialog parent, boolean modal){
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new JSpinner(new SpinnerNumberModel(5, 0, 1000000, 1));
        jSpinner2 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Erdös y Rényi");

        jLabel2.setText("Selecciona los parametros:");

        jLabel3.setText("Tipo de Grafo:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Dirigido", "Dirigido" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });

        jLabel4.setText("¿Permitir AutoConexiones?");

        jLabel5.setText("Número de Vertices");

        jLabel6.setText("Número de Aristas");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Sí" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("¡CREAR!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSpinner1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSpinner1KeyReleased(evt);
            }
        });

        jSpinner2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSpinner2KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(22, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(jSpinner2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public JSpinner getjSpinner1() {
        return jSpinner1;
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
        int idirigido=0, iciclico=0;
        
        Object dirigido = jComboBox1.getSelectedItem(); 
        String stringDirigido = String.valueOf(dirigido);
        switch (stringDirigido) {
        
        case "Dirigido":
        idirigido=1;
        break;

        case "No Dirigido":
        idirigido=0;
        break;
        }
        
        Object ciclico = jComboBox2.getSelectedItem(); 
        String stringCiclico = String.valueOf(ciclico);
        switch (stringCiclico) {
        
        case "Sí":
        iciclico=1;
        break;

        case "No":
        iciclico=0;
        break;
        }

         
        int n =(int) jSpinner1.getValue();
     
         SpinnerModel sm = new SpinnerNumberModel(2, 0, n * (n - 1) / 2, 1); //default value,lower bound,upper bound,increment by/
         jSpinner2.setModel(sm);
         
          
                        if (idirigido == 0 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1) /2, 1));
                    
                        }
                        if (idirigido == 0 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n + 1) / 2, 1));
                        }
                        if (idirigido == 1 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1), 1));
                        }
                        if (idirigido == 1 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * n, 1));
                        }
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // Erdös - Rényi model
        //DIRIGIDO 1
        //A EL MISMO 1
        int idirigido=0, iciclico=0;
        
        Object dirigido = jComboBox1.getSelectedItem(); 
        String stringDirigido = String.valueOf(dirigido);
        switch (stringDirigido) {
        
        case "Dirigido":
        idirigido=1;
        break;

        case "No Dirigido":
        idirigido=0;
        break;
        }
        
        Object ciclico = jComboBox2.getSelectedItem(); 
        String stringCiclico = String.valueOf(ciclico);
        switch (stringCiclico) {
        
        case "Sí":
        iciclico=1;
        break;

        case "No":
        iciclico=0;
        break;
        }
        
         int nodo =(int) jSpinner1.getValue();
         int arista =(int) jSpinner2.getValue();
    
          Grafo grafo = new Grafo();
          grafo.Erdos(nodo, arista, idirigido, iciclico);
          grafo.graphGraph(grafo, idirigido, "erdos");
                                          
       
    }//GEN-LAST:event_jButton1ActionPerformed

         
         
         
         
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
          int idirigido=0, iciclico=0;
        
        Object dirigido = jComboBox1.getSelectedItem(); 
        String stringDirigido = String.valueOf(dirigido);
        switch (stringDirigido) {
        
        case "Dirigido":
        idirigido=1;
        break;

        case "No Dirigido":
        idirigido=0;
        break;
        }
        
        Object ciclico = jComboBox2.getSelectedItem(); 
        String stringCiclico = String.valueOf(ciclico);
        switch (stringDirigido) {
        
        case "Sí":
        iciclico=1;
        break;

        case "No":
        iciclico=0;
        break;
        }

         
        int n =(int) jSpinner1.getValue();
     
         SpinnerModel sm = new SpinnerNumberModel(2, 0, n * (n - 1) / 2, 1); //default value,lower bound,upper bound,increment by/
         jSpinner2.setModel(sm);
         
          
                        if (idirigido == 0 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1) /2, 1));
                    
                        }
                        if (idirigido == 0 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n + 1) / 2, 1));
                        }
                        if (idirigido == 1 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1), 1));
                        }
                        if (idirigido == 1 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * n, 1));
                        }
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1KeyReleased

    private void jSpinner1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinner1KeyReleased
        // TODO add your handling code here:
         int idirigido=0, iciclico=0;
        
        Object dirigido = jComboBox1.getSelectedItem(); 
        String stringDirigido = String.valueOf(dirigido);
        switch (stringDirigido) {
        
        case "Dirigido":
        idirigido=1;
        break;

        case "No Dirigido":
        idirigido=0;
        break;
        }
        
        Object ciclico = jComboBox2.getSelectedItem(); 
        String stringCiclico = String.valueOf(ciclico);
        switch (stringCiclico) {
        
        case "Sí":
        iciclico=1;
        break;

        case "No":
        iciclico=0;
        break;
        }

         
        int n =(int) jSpinner1.getValue();
     
         SpinnerModel sm = new SpinnerNumberModel(2, 0, n * (n - 1) / 2, 1); //default value,lower bound,upper bound,increment by/
         jSpinner2.setModel(sm);
         
          
                        if (idirigido == 0 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1) /2, 1));
                    
                        }
                        if (idirigido == 0 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n + 1) / 2, 1));
                        }
                        if (idirigido == 1 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1), 1));
                        }
                        if (idirigido == 1 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * n, 1));
                        }
    }//GEN-LAST:event_jSpinner1KeyReleased

    private void jSpinner2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinner2KeyReleased
        // TODO add your handling code here:
         int idirigido=0, iciclico=0;
        
        Object dirigido = jComboBox1.getSelectedItem(); 
        String stringDirigido = String.valueOf(dirigido);
        switch (stringDirigido) {
        
        case "Dirigido":
        idirigido=1;
        break;

        case "No Dirigido":
        idirigido=0;
        break;
        }
        
        Object ciclico = jComboBox2.getSelectedItem(); 
        String stringCiclico = String.valueOf(ciclico);
        switch (stringCiclico) {
        
        case "Sí":
        iciclico=1;
        break;

        case "No":
        iciclico=0;
        break;
        }

         
        int n =(int) jSpinner1.getValue();
     
         SpinnerModel sm = new SpinnerNumberModel(2, 0, n * (n - 1) / 2, 1); //default value,lower bound,upper bound,increment by/
         jSpinner2.setModel(sm);
         
          
                        if (idirigido == 0 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1) /2, 1));
                    
                        }
                        if (idirigido == 0 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n + 1) / 2, 1));
                        }
                        if (idirigido == 1 && iciclico == 0){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * (n - 1), 1));
                        }
                        if (idirigido == 1 && iciclico == 1){
                          jSpinner2.setModel(new SpinnerNumberModel((int)jSpinner2.getValue(), 0, n * n, 1));
                        }
    }//GEN-LAST:event_jSpinner2KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ErdosyRenyi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ErdosyRenyi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ErdosyRenyi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ErdosyRenyi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ErdosyRenyi vErdos = new ErdosyRenyi(new javax.swing.JDialog(), true);
                vErdos.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                vErdos.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables


}
